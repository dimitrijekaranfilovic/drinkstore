##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#


#SERVICES

upstream user_service {
	server 127.0.0.1:8081;
}

upstream drink_service {
	server 127.0.0.1:8082;
}

upstream comment_service {
	server 127.0.0.1:8083;
}

#API Gateway configuration
server {
	listen 9999;

	#user_service endpoints
	location = /api/users/register {
		access_log /var/log/nginx/user_service/access/register.log combined;
		error_log  /var/log/nginx/user_service/error/register.log;
		proxy_pass http://user_service;
	}
	
	location = /api/users/authenticate {
		access_log /var/log/nginx/user_service/access/authenticate.log combined;
		error_log  /var/log/nginx/user_service/error/authenticate.log;
		proxy_pass http://user_service;
	}

	location ~ ^/api/users/ban/[a-zA-Z0-9_\-\.]+$ {
		access_log /var/log/nginx/user_service/access/ban.log combined;
		error_log  /var/log/nginx/user_service/error/ban.log;
		proxy_pass http://user_service;
	}

	location = /api/users/authorize {
		access_log /var/log/nginx/user_service/access/authorize.log combined;
		error_log  /var/log/nginx/user_service/error/authorize.log;
		proxy_pass http://user_service;
	}

	location = /api/users/userId {
		access_log /var/log/nginx/user_service/access/user_id_from_jwt.log combined;
		error_log  /var/log/nginx/user_service/error/user_id_from_jwt.log;
		proxy_pass http://user_service;
	}

	
	#drink_service endpoints
	location = /api/drinks {
		access_log /var/log/nginx/drink_service/access/create_drink_get_drinks.log combined;
		error_log  /var/log/nginx/drink_service/error/create_drink_get_drinks.log;
		proxy_pass http://drink_service;
	}

	location ~ ^/api/drinks/[0-9]+$ {
		access_log /var/log/nginx/drink_service/access/crud_single_drink.log combined;
		error_log  /var/log/nginx/drink_service/error/crud_single_drink.log;
		proxy_pass http://drink_service;
	}

	location ~ ^/api/drinks/[0-9]+/images$ {
		access_log /var/log/nginx/drink_service/access/create_update_image.log combined;
		error_log  /var/log/nginx/drink_service/error/create_update_image.log;
		proxy_pass http://drink_service;
	}

	location ~ ^/api/drinks/[0-9]+/grades$ {
		access_log /var/log/nginx/drink_service/access/create_grade.log combined;
		error_log  /var/log/nginx/drink_service/error/create_grade.log;
		proxy_pass http://drink_service;
	}

	location ~ ^/api/drinks/[0-9]+/grades/[0-9]+ {
		access_log /var/log/nginx/drink_service/access/update_delete_grade.log combined;
		error_log  /var/log/nginx/drink_service/error/update_delete_grade.log;
		proxy_pass http://drink_service;
	}

	location ~ ^/api/drinks/[0-9]+/grade-for-user$ {
		access_log /var/log/nginx/drink_service/access/grade_for_user.log combined;
		error_log  /var/log/nginx/drink_service/error/grade_for_user.log;
		proxy_pass http://drink_service;
	}

	location ~ ^/api/drinks/images/[a-zA-Z0-9_\-]+\.[a-zA-Z]+$ {
		access_log /var/log/nginx/drink_service/access/get_image.log combined;
		error_log  /var/log/nginx/drink_service/error/get_image.log;
		proxy_pass http://drink_service;
	}
		
	#comment_service endpoints
	location = /api/comments {
		access_log /var/log/nginx/comment_service/access/create_comment.log combined;
		error_log  /var/log/nginx/comment_service/error/create_comment.log;
		proxy_pass http://comment_service;
	}

	location = /api/comments/reports {
		access_log /var/log/nginx/comment_service/access/get_create_report.log combined;
		error_log  /var/log/nginx/comment_service/error/get_create_report.log;
		proxy_pass http://comment_service;
	}

	location ~ ^/api/comments/for-drink/[0-9]+$ {
		access_log /var/log/nginx/comment_service/access/get_comments_for_drink.log combined;
		error_log  /var/log/nginx/comment_service/error/get_comments_for_drink.log;
		proxy_pass http://comment_service;	
	}

	location ~ ^/api/comments/[a-zA-Z0-9_\-]+$ {
		access_log /var/log/nginx/comment_service/access/delete_comment.log combined;
		error_log  /var/log/nginx/comment_service/error/delete_comment.log;
		proxy_pass http://comment_service; 
	}

	location ~ ^/api/comments/reports/[a-zA-Z0-9_\-]+$ {
		access_log /var/log/nginx/comment_service/access/delete_report.log combined;
		error_log  /var/log/nginx/comment_service/error/delete_report.log;
		proxy_pass http://comment_service;
	}
		
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;

	#server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
